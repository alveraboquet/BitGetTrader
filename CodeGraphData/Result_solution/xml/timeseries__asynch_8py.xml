<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="timeseries__asynch_8py" kind="file">
    <compoundname>timeseries_asynch.py</compoundname>
    <innerclass refid="classtimeseries__asynch_1_1_date_range_too_large_error" prot="public">timeseries_asynch::DateRangeTooLargeError</innerclass>
    <innerclass refid="classtimeseries__asynch_1_1_time_series_asynch" prot="public">timeseries_asynch::TimeSeriesAsynch</innerclass>
    <innernamespace refid="namespacetimeseries__asynch">timeseries_asynch</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacetimeseries__asynch" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>aiohttp</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>aiolimiter<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>AsyncLimiter</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>asyncio</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>bitget.mix.market_api<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>MarketApi</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>candle<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Candle</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>bitget<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>consts<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>c,<sp/>utils</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classtimeseries__asynch_1_1_date_range_too_large_error" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtimeseries__asynch_1_1_date_range_too_large_error" kindref="compound">DateRangeTooLargeError</ref>(Exception):</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Raised<sp/>when<sp/>the<sp/>number<sp/>of<sp/>&apos;getSeries&apos;<sp/>iterations<sp/>is<sp/>too<sp/>large,</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>override<sp/>is<sp/>not<sp/>enabled.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtimeseries__asynch_1_1_date_range_too_large_error_1a0ca080854691bf2fec4b806562fd6428" kindref="member">__init__</ref>(</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message=</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>&apos;getSeries&apos;<sp/>iterations<sp/>is<sp/>too<sp/>large,<sp/>and<sp/>override<sp/>is<sp/>not<sp/>enabled.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="18" refid="classtimeseries__asynch_1_1_date_range_too_large_error_1a0ca080854691bf2fec4b806562fd6428" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>):</highlight></codeline>
<codeline lineno="19" refid="classtimeseries__asynch_1_1_date_range_too_large_error_1a3e6ca630c52498f94039eb3873aa51ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtimeseries__asynch_1_1_date_range_too_large_error_1a3e6ca630c52498f94039eb3873aa51ff" kindref="member">message</ref><sp/>=<sp/>message</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().<ref refid="classtimeseries__asynch_1_1_date_range_too_large_error_1a0ca080854691bf2fec4b806562fd6428" kindref="member">__init__</ref>(self.<ref refid="classtimeseries__asynch_1_1_date_range_too_large_error_1a3e6ca630c52498f94039eb3873aa51ff" kindref="member">message</ref>)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classtimeseries__asynch_1_1_time_series_asynch" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtimeseries__asynch_1_1_time_series_asynch" kindref="compound">TimeSeriesAsynch</ref>:</highlight></codeline>
<codeline lineno="26" refid="classtimeseries__asynch_1_1_time_series_asynch_1acfbf09a855c58fb9037829f78a794006" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtimeseries__asynch_1_1_time_series_asynch_1acfbf09a855c58fb9037829f78a794006" kindref="member">__init__</ref>(self,<sp/>m:<sp/>MarketApi):</highlight></codeline>
<codeline lineno="27" refid="classtimeseries__asynch_1_1_time_series_asynch_1a1de127aa6a9c207eeff9a7b4d6d57afe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtimeseries__asynch_1_1_time_series_asynch_1a1de127aa6a9c207eeff9a7b4d6d57afe" kindref="member">api</ref><sp/>=<sp/>m</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classtimeseries__asynch_1_1_time_series_asynch_1a22eb41938bc99d26cabc77fcddf72e46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>async<sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtimeseries__asynch_1_1_time_series_asynch_1a22eb41938bc99d26cabc77fcddf72e46" kindref="member">candles_async</ref>(self,<sp/>session,<sp/>path):</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>----<sp/>Create<sp/>Request<sp/>Parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp<sp/>=<sp/>utils.get_timestamp()</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign<sp/>=<sp/>utils.sign(</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utils.pre_hash(timestamp,<sp/>c.GET,<sp/>path,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>self.api.API_SECRET_KEY</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>=<sp/>utils.get_header(</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.api.API_KEY,<sp/>str(sign),<sp/>str(timestamp),<sp/>self.api.PASSPHRASE</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>url<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;https://api.bitget.com/api/mix/v1/market/candles&quot;</highlight><highlight class="normal"><sp/>+<sp/>path</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>async<sp/>with<sp/>session.get(url,<sp/>headers=header)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>resp:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candles<sp/>=<sp/>await<sp/>resp.json()</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>candles:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(x[1]<sp/>==<sp/>x[2]<sp/>==<sp/>x[3]<sp/>==<sp/>x[4]):</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series.append(<ref refid="classcandle_1_1_candle" kindref="compound">Candle</ref>(x[0],<sp/>x[1],<sp/>x[2],<sp/>x[3],<sp/>x[4],<sp/>x[5],<sp/>x[6]))</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>series</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>----<sp/>getSeries<sp/>----</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>--<sp/>calculates<sp/>number<sp/>of<sp/>iterations<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>--<sp/>iterates<sp/>get<sp/>requests,<sp/>builds<sp/>chronological</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>--<sp/>list<sp/>of<sp/>Candle<sp/>objects.<sp/>Returns<sp/>the<sp/>aforementioned<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>async<sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtimeseries__asynch_1_1_time_series_asynch_1aae8ff5806de73768e11d7f3c324a2fd6" kindref="member">getSeries</ref>(</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self,<sp/>symbol,<sp/>granularity,<sp/>startTime=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>endTime=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>override=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classtimeseries__asynch_1_1_time_series_asynch_1aae8ff5806de73768e11d7f3c324a2fd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>):</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>----<sp/>Calculate<sp/>number<sp/>of<sp/>candles,<sp/>and<sp/>required<sp/>iterations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_candles<sp/>=<sp/>math.floor(</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int(endTime)<sp/>-<sp/>int(startTime))<sp/>/<sp/>(int(granularity)<sp/>*<sp/>1000)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>num_candles<sp/>&gt;<sp/>100:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>override:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classtimeseries__asynch_1_1_date_range_too_large_error" kindref="compound">DateRangeTooLargeError</ref>()</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations<sp/>=<sp/>math.ceil(num_candles<sp/>/<sp/>100)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startTime<sp/>=<sp/>endTime<sp/>-<sp/>iterations<sp/>*<sp/>(1000<sp/>*<sp/>int(granularity)<sp/>*<sp/>100)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endTime<sp/>-=<sp/>(iterations<sp/>-<sp/>1)<sp/>*<sp/>(1000<sp/>*<sp/>int(granularity)<sp/>*<sp/>100)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>----<sp/>build<sp/>http<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>limiter<sp/>=<sp/>AsyncLimiter(18,<sp/>1)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client<sp/>=<sp/>aiohttp.ClientSession()</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>async<sp/>with<sp/>client<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>session:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>----<sp/>Fetch<sp/>candles,<sp/>append<sp/>each<sp/>tempSeries<sp/>to<sp/>finalSeries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalSeries<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempSeries<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>iterations):</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;?symbol=&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(symbol)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&amp;granularity=&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(granularity)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&amp;startTime=&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(startTime)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&amp;endTime=&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(endTime)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempSeries.append(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asyncio.ensure_future(self.<ref refid="classtimeseries__asynch_1_1_time_series_asynch_1a22eb41938bc99d26cabc77fcddf72e46" kindref="member">candles_async</ref>(session,<sp/>path))</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startTime<sp/>=<sp/>endTime</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endTime<sp/>+=<sp/>1000<sp/>*<sp/>int(granularity)<sp/>*<sp/>100</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>asyncio.sleep(1<sp/>/<sp/>20)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalSeries<sp/>=<sp/>await<sp/>asyncio.gather(*tempSeries)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>finalSeries</highlight></codeline>
    </programlisting>
    <location file="C:/Users/bbeaulieu/source/repos/BitGetTrader/contracts/timeseries_asynch.py"/>
  </compounddef>
</doxygen>
